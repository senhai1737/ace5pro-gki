name: ace5pro
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5_pro'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-g013ec21bba94-abogki383916444'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "build"
         git config --global user.email "2772000679@qq.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/senhai1737/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         
      - name: Set up SukiSU
        run: |
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
      - name: Set up susfs
        run: |
           cd kernel_workspace
           git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
           git clone https://github.com/ExmikoN/SukiSU_patch.git

           cd kernel_platform        
           cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
           cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
           cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
           #lz4k
           cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux
           cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib
           cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto
           # Apply patches
           cd ./common

           sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
           sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch

           patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
           cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
           patch -p1 -F 3 < syscall_hooks.patch
           echo "完成"

      - name: Apply lz4kd Patches
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true

      - name: Modify Platform Identity
        run: |
          cd kernel_workspace/kernel_platform/common
          # 精准修改设备树标识
          find arch/arm64/boot/dts/vendor/qcom -name 'parrot-og.dtsi' -exec sed -i '
            s/qcom,hmbird-gki/qcom,hmbird-ogki/g;
            s/"hmbird,gki"/"hmbird,ogki"/g;
            s/HMBIRD_GKI/HMBIRD_OGKI/g;
          ' {} +

          # 添加平台定义
          echo -e "\nconfig ARCH_HMBIRD_OGKI\n\tbool \"HMBIRD OGKI Platform\"\n\tselect ARCH_QCOM\n\thelp\n\t  Support for HMBIRD OGKI platforms" >> arch/arm64/Kconfig.platforms

          # 更新配置
          echo "CONFIG_ARCH_HMBIRD_OGKI=y" >> arch/arm64/configs/gki_defconfig
          sed -i '/CONFIG_ARCH_HMBIRD/d' arch/arm64/configs/gki_defconfig

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          # 保留原有配置
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KPM=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          # 新增OGKI兼容配置
          echo "CONFIG_HMBIRD_OGKI_COMPAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel: OGKI Compatibility"
          
      - name: Modify Kernel Identity
        run: |
          cd kernel_workspace/kernel_platform
          # 修改版本生成逻辑
          sed -i '
            s/GKI/OGKI/g;
            s/-gki/-ogki/g;
          ' common/scripts/setlocalversion
          sed -i 's/res="\$res\$(cat "\$file")"/res="${{ github.event.inputs.KERNEL_NAME }}"/g' common/scripts/setlocalversion
          
          # 强制重建版本信息
          rm -f common/include/generated/utsrelease.h
          rm -f common/include/generated/compile.h
          make -C common include/generated/utsrelease.h

      - name: Add sched_ext
        run: |
         cd kernel_workspace/kernel_platform/
         git clone https://github.com/senhai1737/sched_ext.git
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git
         cd common/kernel/sched
         sed -i.bak '/# include "ext.c"/a\# include "hmbird_sched_proc_main.c"\n#endif\n\n#ifdef CONFIG_SLIM_SCHED\n# include "slim_sysctl.c"' build_policy.c

      - name: Build kernel
        run: |
         cd kernel_workspace/kernel_platform
         BUILD_BROKEN_VERIFY_USES_LIBRARIES=true \
         SKIP_ABI_CHECK=true \
         KERNEL_DIR=`pwd` \
         tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist

      - name: Generate AnyKernel3
        run: |
         cd kernel_workspace/kernel_platform/dist/
         git clone https://github.com/senhai1737/AnyKernel3.git --depth=1
         rm -rf ./AnyKernel3/.git
         cp Image AnyKernel3/
         # 添加一加专用修补脚本
         echo 'ui_print "Patching for OnePlus Ace 5 Pro OGKI..."; 
         patch_dtbo() {
           blockdev --setrw /dev/block/by-name/dtbo
           dd if=/dev/zero of=/dev/block/by-name/dtbo bs=256k count=1 conv=notrunc
         }
         patch_dtbo' >> AnyKernel3/customize.sh

      - name: Verify Build Artifacts
        run: |
         cd kernel_workspace/kernel_platform/dist
         # 验证内核标识
         if ! strings Image | grep -q 'HMBIRD_OGKI'; then
           echo "❌ 内核标识验证失败！"
           exit 1
         fi
         # 验证DTB兼容性
         if ! fdtdump dtb.img | grep -q 'hmbird,ogki'; then
           echo "❌ DTB兼容性验证失败！"
           exit 1
         fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
         name: SuKiSu_OGKI_${{ env.KSUVER }}
         path: |
           kernel_workspace/kernel_platform/dist/AnyKernel3/*
           kernel_workspace/kernel_platform/dist/Image
